{"version":3,"sources":["Context.js","components/Header.js","hooks/useHover.js","components/CartItem.js","pages/Cart.js","components/Image.js","utils/index.js","pages/Photos.js","App.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","allPhotos","setAllPhotos","cartItems","setCartItems","useEffect","fetch","then","res","json","data","Provider","value","toggleFavorite","id","updatedArr","map","photo","isFavorite","addToCart","newItem","prevItems","removeFromCart","filter","item","emptyCart","Header","cartClassName","useContext","length","to","className","useHover","hovered","setHovered","ref","useRef","enter","leave","current","addEventListener","CartItem","iconClassName","onClick","src","url","width","Cart","buttonText","setButtonText","totalCostDisplay","toLocaleString","style","currency","cartItemElements","setTimeout","console","log","Image","img","some","getClass","i","Photos","imageElements","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8d1d9ea.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nfunction ContextProvider({ children }) {\r\n  const [allPhotos, setAllPhotos] = useState([]);\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const url =\r\n    \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\";\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => setAllPhotos(data));\r\n  }, []);\r\n\r\n  function toggleFavorite(id) {\r\n    const updatedArr = allPhotos.map((photo) => {\r\n      if (photo.id === id) {\r\n        return { ...photo, isFavorite: !photo.isFavorite };\r\n      }\r\n      return photo;\r\n    });\r\n\r\n    setAllPhotos(updatedArr);\r\n  }\r\n\r\n  function addToCart(newItem) {\r\n    setCartItems((prevItems) => [...prevItems, newItem]);\r\n  }\r\n\r\n  function removeFromCart(id) {\r\n    setCartItems((prevItems) => prevItems.filter((item) => item.id !== id));\r\n  }\r\n\r\n  function emptyCart() {\r\n    setCartItems([]);\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        allPhotos,\r\n        toggleFavorite,\r\n        cartItems,\r\n        addToCart,\r\n        removeFromCart,\r\n        emptyCart,\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport { ContextProvider, Context };\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Context } from \"../Context\";\r\n\r\nfunction Header() {\r\n  const { cartItems } = useContext(Context);\r\n  const cartClassName =\r\n    cartItems.length > 0 ? \"ri-shopping-cart-fill\" : \"ri-shopping-cart-line\";\r\n  return (\r\n    <header>\r\n      <Link to=\"/\">\r\n        <h2>Pic Some</h2>\r\n      </Link>\r\n      <Link to=\"/cart\">\r\n        <i className={`${cartClassName} ri-fw ri-2x`}></i>\r\n      </Link>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction useHover() {\r\n  const [hovered, setHovered] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  function enter() {\r\n    setHovered(true);\r\n  }\r\n\r\n  function leave() {\r\n    setHovered(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    ref.current.addEventListener(\"mouseenter\", enter);\r\n    ref.current.addEventListener(\"mouseleave\", leave);\r\n  }, []);\r\n\r\n  return [hovered, ref];\r\n}\r\n\r\nexport default useHover;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Context } from \"../Context\";\r\nimport useHover from \"../hooks/useHover\";\r\n\r\nfunction CartItem({ item }) {\r\n  const [hovered, ref] = useHover();\r\n  const { removeFromCart } = useContext(Context);\r\n\r\n  const iconClassName = hovered ? \"ri-delete-bin-fill\" : \"ri-delete-bin-line\";\r\n\r\n  return (\r\n    <div className=\"cart-item\">\r\n      <i\r\n        className={iconClassName}\r\n        onClick={() => removeFromCart(item.id)}\r\n        ref={ref}\r\n      ></i>\r\n\r\n      <img src={item.url} width=\"130px\" />\r\n      <p>$5.99</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nCartItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    url: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport CartItem from \"../components/CartItem\";\r\n\r\nfunction Cart() {\r\n  const [buttonText, setButtonText] = useState(\"Place Order\");\r\n  const { cartItems, emptyCart } = useContext(Context);\r\n  const totalCost = 5.99 * cartItems.length;\r\n  const totalCostDisplay = totalCost.toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  });\r\n\r\n  const cartItemElements = cartItems.map((item) => (\r\n    <CartItem key={item.id} item={item} />\r\n  ));\r\n\r\n  function placeOrder() {\r\n    setButtonText(\"Ordering...\");\r\n    setTimeout(() => {\r\n      console.log(\"Order placed!\");\r\n      setButtonText(\"Place Order\");\r\n      emptyCart();\r\n    }, 3000);\r\n  }\r\n\r\n  return (\r\n    <main className=\"cart-page\">\r\n      <h1>Check out</h1>\r\n      {cartItemElements}\r\n      <p className=\"total-cost\">Total: {totalCostDisplay}</p>\r\n      {cartItems.length > 0 ? (\r\n        <div className=\"order-button\">\r\n          <button onClick={placeOrder}>{buttonText}</button>\r\n        </div>\r\n      ) : (\r\n        <p>You have no items in your cart.</p>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React, { useState, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Context } from \"../Context\";\r\nimport useHover from \"../hooks/useHover\";\r\n\r\nfunction Image({ className, img }) {\r\n  const [hovered, ref] = useHover();\r\n  const { toggleFavorite, addToCart, cartItems, removeFromCart } = useContext(\r\n    Context\r\n  );\r\n\r\n  function heartIcon() {\r\n    if (img.isFavorite) {\r\n      return (\r\n        <i\r\n          className=\"ri-heart-fill favorite\"\r\n          onClick={() => toggleFavorite(img.id)}\r\n        ></i>\r\n      );\r\n    } else if (hovered) {\r\n      return (\r\n        <i\r\n          className=\"ri-heart-line favorite\"\r\n          onClick={() => toggleFavorite(img.id)}\r\n        ></i>\r\n      );\r\n    }\r\n  }\r\n\r\n  function cartIcon() {\r\n    const alreadyInCart = cartItems.some((item) => item.id === img.id);\r\n    if (alreadyInCart) {\r\n      return (\r\n        <i\r\n          className=\"ri-shopping-cart-fill cart\"\r\n          onClick={() => removeFromCart(img.id)}\r\n        ></i>\r\n      );\r\n    } else if (hovered) {\r\n      return (\r\n        <i\r\n          className=\"ri-add-circle-line cart\"\r\n          onClick={() => addToCart(img)}\r\n        ></i>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`${className} image-container`} ref={ref}>\r\n      <img src={img.url} className=\"image-grid\" />\r\n      {heartIcon()}\r\n      {cartIcon()}\r\n    </div>\r\n  );\r\n}\r\n\r\nImage.propTypes = {\r\n  className: PropTypes.string,\r\n  img: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    isFavorite: PropTypes.bool,\r\n  }),\r\n};\r\n\r\nexport default Image;\r\n","export function getClass(i) {\r\n  if (i % 5 === 0) {\r\n    return \"big\";\r\n  } else if (i % 6 === 0) {\r\n    return \"wide\";\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Image from \"../components/Image\";\r\nimport { Context } from \"../Context\";\r\nimport { getClass } from \"../utils\";\r\n\r\nfunction Photos() {\r\n  const { allPhotos } = useContext(Context);\r\n\r\n  const imageElements = allPhotos.map((img, i) => (\r\n    <Image key={img.id} img={img} className={getClass(i)} />\r\n  ));\r\n\r\n  return <main className=\"photos\">{imageElements}</main>;\r\n}\r\n\r\nexport default Photos;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Cart from \"./pages/Cart\";\r\nimport Photos from \"./pages/Photos\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Photos />\r\n        </Route>\r\n\r\n        <Route path=\"/cart\">\r\n          <Cart />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport { ContextProvider } from \"./Context\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <ContextProvider>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </ContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}